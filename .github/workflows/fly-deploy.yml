name: Deploy to Fly (prebuilt image)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  FLY_APP: ${{ vars.FLY_APP }}
  IMAGE: registry.fly.io/${{ vars.FLY_APP }}:${{ github.sha }}

concurrency:
  group: fly-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Login to Fly registry
        run: flyctl auth docker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.merge
          push: true
          tags: |
            ${{ env.IMAGE }}
            registry.fly.io/${{ env.FLY_APP }}:latest

      - name: Set Fly secrets (idempotent)
        run: |
          set -e
          args="TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} TELEGRAM_WEBHOOK_SECRET=${{ secrets.TELEGRAM_WEBHOOK_SECRET }} SCORER_API_KEY=${{ secrets.SCORER_API_KEY }}"
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then args="$args OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"; fi
          flyctl secrets set $args -a "${{ env.FLY_APP }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy prebuilt image
        run: flyctl deploy --image "${{ env.IMAGE }}" -a "${{ env.FLY_APP }}" --strategy immediate --yes
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Health check
        run: curl -sSf "https://${{ env.FLY_APP }}.fly.dev/health"

      - name: Set Telegram webhook (secret header)
        run: |
          curl -sS -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/setWebhook" \
            -d "url=https://${{ env.FLY_APP }}.fly.dev/telegram" \
            -d "secret_token=${{ secrets.TELEGRAM_WEBHOOK_SECRET }}" \
            -d "max_connections=40" \
            -d "drop_pending_updates=true" \
            -d 'allowed_updates=["message","callback_query"]'
          curl -sS "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/getWebhookInfo"
